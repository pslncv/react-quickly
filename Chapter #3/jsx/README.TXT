Для работы babel.js необходимо:

- установить Node.js (node -v)
- установить npm (npm -v)

Скачиваем В ПАПКУ ПРОЕКТА (где находится index.html, это важно!) npm-пакеты bable для транспиляции JSX кода в JS:
npm install --save-dev @babel/core @babel/cli @babel/preset-react, где:
- npm install - обычная команда установки npm пакетов
- --save-dev - флаг, в которым мы обозначаем что эти пакеты необходимы только на этапе разработки. В файле package.json появится объект "devDependencies", внутри которого и поместятся все пакеты выше
- @babel/core - корневой пакет, babel без него работать не будет
- @babel/cli - пакет для работы babel с помощью cli (командной строки). Без этого пакета работать с babel через любую консоль будет нельзя
- @babel/preset-react - пакет необходимых пресетов babel, чтобы явно и корректно компилировать JSX в JS для React

Проверим версию babel, чтобы убедиться, что мы всё установили правильно
node_modules/.bin/babel --version
Должно появиться что-то вроде " 7.23.4 (@babel/core 7.23.7) "

Запустим транспиляцию с помощью команды:
node_modules/.bin/babel js/script.jsx -o js/script.js, где:
- node_modules/.bin/babel - путь к babel
- js/script.jsx - путь к существующему JSX файлу с нашим JSX кодом
- -o - флаг "output", обозначающий, что далее последует путь к новому файлу, который создастся после транспиляции
- js/script.js - путь к новому файлу, который создастся после транспиляции

Вставляем в HTML разметку в <body> скрипт c атрибутом пути (src), на который будет ссылаться браузер. В нашем случае:
<script src="js/script.js"></script>

Перезагружаем веб-сервер. Проверяем.